| App Name | MASVS Category | Vulnerability | MASVS Counterpart |
| - | - | - | - |
| [Androgoat](https://github.com/satishpatnayak/AndroGoat) |  |  |  |
|  | Storage |  |  |
|  |  | Insecure Data Storage – Shared Prefs - 1 | MASWE-0006: Sensitive Data Stored Unencrypted in Private Storage Locations |
|  |  | Insecure Data Storage - Shared Prefs - 2 | MASWE-0006: Sensitive Data Stored Unencrypted in Private Storage Locations |
|  |  | Insecure Data Storage - SQLite | MASWE-0006: Sensitive Data Stored Unencrypted in Private Storage Locations |
|  |  | Insecure Data Storage – Temp Files | MASWE-0006: Sensitive Data Stored Unencrypted in Private Storage Locations |
|  |  | Insecure Data Storage – SD Card | MASWE-0007: Sensitive Data Stored Unencrypted in Shared Storage Requiring No User Interaction |
|  |  | Insecure Logging | MASWE-0001: Insertion of Sensitive Data into Logs |
|  |  | Android allowBackup | MASWE-0003: Backup Unencrypted + MASWE-0004: Sensitive Data Not Excluded From Backup |
|  | Crypto |  |  |
|  |  | Broken Cryptography | ?MASWE-0020: Improper Encryption? |
|  | Auth |  |  |
|  |  | Hard coding issues | ?MASWE-0005: API Keys Hardcoded in the App Package? |
|  | Network |  |  |
|  |  | Network intercepting – HTTP | MASWE-0050: Cleartext Traffic |
|  |  | Network intercepting – HTTPS | ?MASWE-0052: Insecure Certificate Validation? |
|  |  | Network intercepting – Certificate Pinning | MASWE-0047: Insecure Identity Pinning |
|  |  | Misconfigured Network_Security_Config.xml | ?MASWE-0050: Cleartext Traffic? |
|  | Platform |  |  |
|  |  | Keyboard Cache | MASWE-0053: Sensitive Data Leaked via the User Interface |
|  |  | Unprotected Android Components – Activity | MASWE-0066: Insecure Intents |
|  |  | Unprotected Android Components – Service | MASWE-0062: Insecure Services |
|  |  | Unprotected Android Components – Broadcast Receivers | MASWE-0063: Insecure Broadcast Receivers |
|  |  | AndroidDebuggable | MASWE-0067: Debuggable Flag Not Disabled |
|  |  | Custom URL Scheme | MASWE-0058: Insecure Deep Links |
|  |  | Input Validations – XSS | MASWE-0072: Universal XSS |
|  |  | Input Validations – WebView | MASWE-0071: WebViews Loading Content from Untrusted Sources |
|  | Code |  |  |
|  |  | Input Validations – SQLi | MASWE-0086: SQL Injection |
|  | Resilience |  |  |
|  |  | Root Detection | MASWE-0097: Root/Jailbreak Detection Not Implemented |
|  |  | Emulator Detection | MASWE-0099: Emulator Detection Not Implemented |
|  | Privacy |  |  |
|  |  | - | - |
| [DIVA](https://github.com/payatu/diva-android) |  |  |  |
|  | Storage |  |  |
|  |  | Insecure Data Storage – Part 1 | ??MASWE-0006: Sensitive Data Stored Unencrypted in Private Storage Locations?? |
|  |  | Insecure Data Storage – Part 2 | ??MASWE-0007: Sensitive Data Stored Unencrypted in Shared Storage Requiring No User Interaction?? |
|  |  | Insecure Data Storage – Part 3 | ??MASWE-0002: Sensitive Data Stored With Insufficient Access Restrictions in Internal Locations?? |
|  |  | Insecure Data Storage – Part 4 | ??MASWE-0006: Sensitive Data Stored Unencrypted in Private Storage Locations?? |
|  |  | Insecure Logging | MASWE-0001: Insertion of Sensitive Data into Logs |
|  | Crypto |  |  |
|  |  | - | - |
|  | Auth |  |  |
|  |  | Hardcoding Issues – Part 1 | ??MASWE-0005: API Keys Hardcoded in the App Package?? |
|  |  | Hardcoding Issues – Part 2 | ??MASWE-0005: API Keys Hardcoded in the App Package?? |
|  |  | Access Control Issues – Part 1 | Further Analysis Required |
|  |  | Access Control Issues – Part 2 | Further Analysis Required |
|  |  | Access Control Issues – Part 3 | Further Analysis Required |
|  | Network |  |  |
|  |  | - | - |
|  | Platform |  |  |
|  |  | - | - |
|  | Code |  |  |
|  |  | Input Validation Issues – Part 1 | ?MASWE-0086: SQL Injection? |
|  |  | Input Validation Issues – Part 2 | Further Analysis Required |
|  |  |  Input Validation Issues – Part 3 | Further Analysis Required |
|  | Resilience |  |  |
|  |  | - | - |
|  | Privacy |  |  |
|  |  | - | - |
| [InsecureBankv2](https://github.com/dineshshetty/Android-InsecureBankv2) |  |  |  |
|  | Storage |  |  |
|  |  | Insecure SDCard storage | MASWE-0007: Sensitive Data Stored Unencrypted in Shared Storage Requiring No User Interaction |
|  |  | Insecure Logging mechanism | MASWE-0001: Insertion of Sensitive Data into Logs |
|  |  | Sensitive Information in Memory | MASWE-0006: Sensitive Data Stored Unencrypted in Private Storage Locations |
|  |  | Android Backup vulnerability | MASWE-0003: Backup Unencrypted + MASWE-0003: Backup Unencrypted |
|  | Crypto |  |  |
|  |  | Weak Cryptography implementation | MASWE-0019: Risky Cryptography Implementations + MASWE-0020: Improper Encryption |
|  |  | Local Encryption issues | MASWE-0020: Improper Encryption + MASWE-0006: Sensitive Data Stored Unencrypted in Private Storage Locations |
|  | Auth |  |  |
|  |  | Weak Authorization mechanism | MASWE-0033: Authentication or Authorization Protocol Security Best Practices Not Followed |
|  |  | Weak change password implementation | MASWE-0033: Authentication or Authorization Protocol Security Best Practices Not Followed |
|  |  | Username Enumeration issue | MASWE-0033: Authentication or Authorization Protocol Security Best Practices Not Followed |
|  |  | Hardcoded secrets | ?MASWE-0005: API Keys Hardcoded in the App Package? |
|  | Network |  |  |
|  |  | Insecure HTTP connections | MASWE-0050: Cleartext Traffic |
|  | Platform |  |  |
|  |  | Android Pasteboard vulnerability | MASWE-0053: Sensitive Data Leaked via the User Interface |
|  |  | Android keyboard cache issues | MASWE-0053: Sensitive Data Leaked via the User Interface |
|  |  | Insecure Content Provider access | MASWE-0064: Insecure Content Providers |
|  |  | Vulnerable Activity Components | MASWE-0066: Insecure Intents |
|  |  | Flawed Broadcast Receivers | MASWE-0063: Insecure Broadcast Receivers |
|  |  | Application Debuggable | MASWE-0067: Debuggable Flag Not Disabled |
|  |  | Insecure Webview implementation | MASWE-0069: WebViews Allows Access to Local Resources + MASWE-0071: WebViews Loading Content from Untrusted Sources |
|  |  | Intent Sniffing and Injection | MASWE-0066: Insecure Intents |
|  | Code |  |  |
|  |  | Parameter Manipulation | ?MASWE-0081: Unsafe Handling Of Data From External Interfaces? |
|  | Resilience |  |  |
|  |  | Root Detection and Bypass | MASWE-0097: Root/Jailbreak Detection Not Implemented |
|  |  | Emulator Detection and Bypass | MASWE-0099: Emulator Detection Not Implemented |
|  |  | Runtime Manipulation | MASWE-0103: RASP Techniques Not Implemented + MASWE-0105: Integrity of App Resources Not Verified |
|  |  | Developer Backdoors | MASWE-0095: Code That Disables Security Controls Not Removed |
|  |  | Application Patching | MASWE-0085: Unsafe Dynamic Code Loading + MASWE-0103: RASP Techniques Not Implemented |
|  | Privacy |  |  |
|  |  | - | - |
| [Hacking Playground Android App](https://github.com/OWASP/MASTG-Hacking-Playground) | |  |  |
|  | Storage |  |  |
|  |  | Sensitive data in internal storage | MASWE-0006: Sensitive Data Stored Unencrypted in Private Storage Locations |
|  |  | Sensitive data in external storage | MASWE-0007: Sensitive Data Stored Unencrypted in Shared Storage Requiring No User Interaction |
|  |  | Sensitive data in plaintext shared preferences | MASWE-0007: Sensitive Data Stored Unencrypted in Shared Storage Requiring No User Interaction |
|  |  | Sensitive data in unencrypted SQLite database | MASWE-0007: Sensitive Data Stored Unencrypted in Shared Storage Requiring No User Interaction |
|  |  | Sensitive data in logs | MASWE-0001: Insertion of Sensitive Data into Logs |
|  | Crypto |  |  |
|  |  | Weak Encryption (XOR) | MASWE-0020: Improper Encryption |
|  | Auth |  |  |
|  |  | - | - |
|  | Network |  |  |
|  |  | Using insecure channels for loading webpages (http instead of https) | MASWE-0050: Cleartext Traffic |
|  | Platform |  |  |
|  |  | Unsecure remote WebViews | ?MASWE-0071: WebViews Loading Content from Untrusted Sources? |
|  |  | Unsecure local WebViews | ?MASWE-0069: WebViews Allows Access to Local Resources? |
|  |  | Keyboard cache remembers sensitive data | MASWE-0053: Sensitive Data Leaked via the User Interface |
|  | Code |  |  |
|  |  | SQL injection | MASWE-0086: SQL Injection |
|  |  | SQL injections via content provider | MASWE-0064: Insecure Content Providers + MASWE-0086: SQL Injection |
|  |  | Dynamic code injection (DEXClassLoader) | MASWE-0085: Unsafe Dynamic Code Loading |
|  | Resilience |  |  |
|  |  | Key to encrypted SQLite database stored locally (retrievable) | MASWE-0014: Cryptographic Keys Not Properly Protected at Rest + MASWE-0020: Improper Encryption |
|  |  | Memory dumps leaking sensitive data (decrypted keys, etc) | MASWE-0082: Unsafe Handling of Data From Local Storage |
|  | Privacy |  |  |
|  |  | - | - |
| [OVAA](https://github.com/oversecured/ovaa) |  |  |  |
|  | Storage |  |  |
|  |  | Obtaining access to app logs via InsecureLoggerService. Leak of credentials in LoginActivity Log.d("ovaa", "Processing " + loginData). (Insecure logging of sensitive user data) | MASWE-0001: Insertion of Sensitive Data into Logs |
|  | Crypto |  |  |
|  |  | Use of the hardcoded AES key in WeakCrypto. (crypto/key management failure) | MASWE-0013: Hardcoded Cryptographic Keys in Use |
|  | Auth |  |  |
|  |  | - | - |
|  | Network |  |  |
|  |  | - | - |
|  | Platform |  |  |
|  |  | Arbitrary login url via deeplink leaking sensitive user data (Platform IPC/manifest concern/issue) | MASWE-0058: Insecure Deep Links |
|  |  | Obtaining access to arbitrary content providers via deeplink (Misuse of content provider permissions semantics and intent flags) | MASWE-0066: Insecure Intents + MASWE-0064: Insecure Content Providers |
|  |  | Vulnerable host validation when processing deeplink (Incorrect origin/host validation & WebView/deeplink platform integration issue) | MASWE-0058: Insecure Deep Links |
|  |  | Opening arbitrary URLs via deeplink (Unsafe WebView configuration) | MASWE-0070: JavaScript Loaded from Untrusted Sources |
|  |  | Access to arbitrary activities and access to arbitrary content providers via arbitrary Intent object (Insecure Intent handling) | MASWE-0066: Insecure Intents |
|  |  | Theft of arbitrary files in MainActivity by intercepting an activity launch from Intent.ACTION_PICK and passing the URI to any file as data. (broken intent/URI handling & insufficient URI validation when interacting with platform picker) | MASWE-0066: Insecure Intents + MASWE-0064: Insecure Content Providers |
|  |  | Insecure broadcast to MainActivity containing credentials. The attacker can register a broadcast receiver with action oversecured.ovaa.action.UNPROTECTED_CREDENTIALS_DATA and obtain the user's data. (Unsafe broadcast IPC and exposed receiver -> platform ipc misconfiguration) | MASWE-0063: Insecure Broadcast Receivers |
|  |  | Insecure activity launch in MainActivity with action oversecured.ovaa.action.WEBVIEW, containing the user's encrypted data in the query parameter token. (Sensitive data passed via intents/URIs — unsafe use of platform IPC) | MASWE-0066: Insecure Intents + ?MASWE-0053: Sensitive Data Leaked via the User Interface? |
|  |  | Obtaining read/write access to arbitrary files in TheftOverwriteProvider via path-traversal in the value uri.getLastPathSegment(). (ContentProvider implementation mistake (platform component) that allows directory traversal) | MASWE-0064: Insecure Content Providers + MASWE-0081: Unsafe Handling Of Data From External Interfaces |
|  |  | Use of very wide file sharing declaration for oversecured.ovaa.fileprovider content provider in root entry. (Manifest/provider configuration that exposes files system-wide — platform config issue) | MASWE-0064: Insecure Content Providers |
|  | Code |  |  |
|  |  | Deletion of arbitrary files via the insecure DeleteFilesSerializable deserialization object. (Insecure Deserialization) | MASWE-0088: Insecure Object Deserialization |
|  |  | Hardcoded credentials to a dev environment endpoint in strings.xml in test_url entry. (Hardcoded sensitive data) | MASWE-0005: API Keys Hardcoded in the App Package |
|  |  | Arbitrary code execution via a DEX library located in a world-readable/writable directory. (Unsafe runtime code loading from writable locations enables tampering / arbitrary code injection) | MASWE-0085: Unsafe Dynamic Code Loading |
|  |  | Memory corruption via the MemoryCorruptionParcelable object. | MASWE-0088: Insecure Object Deserialization |
|  |  | Memory corruption via the MemoryCorruptionSerializable object. | MASWE-0088: Insecure Object Deserialization |
|  |  | Arbitrary Code Execution in OversecuredApplication by launching code from third-party apps with no security checks. (Allowing external code execution undermines runtime integrity / tamper resistance) | MASWE-0085: Unsafe Dynamic Code Loading |
|  | Resilience |  |  |
|  |  | - | - |
|  | Privacy |  |  |
|  |  | - | - |
| [InsecureShop](https://github.com/hax0rgb/InsecureShop/) |  |  |  |
|  | Storage |  |  |
|  |  | Insecure Data Storage: The app stores user credentials locally without encrypting them. | MASWE-0006: Sensitive Data Stored Unencrypted in Private Storage Locations |
|  |  | Insecure Logging: User credentials are leaked in logcat. Only attackers with physical access to the device can access this information. | MASWE-0001: Insertion of Sensitive Data into Logs |
|  | Crypto |  |  |
|  |  | - | - |
|  | Auth |  |  |
|  |  | AWS Cognito Misconfiguration: The misconfigured AWS cognito instance can be used to accesss AWS S3 bucket. | MASWE-0033: Authentication or Authorization Protocol Security Best Practices Not Followed |
|  |  | Hardcoded Credentials: Credentials are hardcoded somewhere that can be used to login to the application | ?MASWE-0005: API Keys Hardcoded in the App Package? |
|  | Network |  |  |
|  |  | Lack of SSL Certificate Validation: The unsafe implementation of OnReceived SSL Error can be used to eavesdrop all the traffic loaded in webview. | MASWE-0052: Insecure Certificate Validation |
|  | Platform |  |  |
|  |  | Insufficient URL Validation: Possible to load any arbitrary URL in webview via Deeplink. | MASWE-0058: Insecure Deep Links |
|  |  | Weak Host Validation Check: Possible to bypass host validation check to load any arbitrary URL in webview. | MASWE-0071: WebViews Loading Content from Untrusted Sources |
|  |  | Arbitrary Code Execution: Arbitrary Code Execution via third-party package contexts. | ?MASWE-0107: Runtime Code Integrity Not Verified? |
|  |  | Access to Protected Components: The app takes an embedded Intent and passes it to method like startActivity. This allows any third party app to launch any protected component. | ?MASWE-0066: Insecure Intents? |
|  |  | Unprotected Data URIs: The untrusted URI's passed via loadUrl method allows attackers to pass arbitrary URL in webview. | MASWE-0071: WebViews Loading Content from Untrusted Sources |
|  |  | Theft of Arbitrary: Possible to steal files from app's local storage via ChooserActivity. | MASWE-0066: Insecure Intents |
|  |  | Insecure Broadcast Receiver: An exported activity registers a broadcast during onCreate method execution. An attacker can trigger this broadcast and provide arbitrary URL in 'web_url' parameter. | MASWE-0063: Insecure Broadcast Receivers |
|  |  | Insecure use of FilePaths in FileProvider: The use of wide file sharing declaration can be used to access root directory via content Provider. | MASWE-0064: Insecure Content Providers |
|  |  | Use of Implicit intent to send a broadcast with sensitive data: The use of Implicit intent can allow third-party apps to steal credentials. | MASWE-0066: Insecure Intents |
|  |  | Intercepting Implicit intent to load arbitrary URL: The use of Implicit intent can allow third-party apps to load any arbitrary URL in webview. | ?MASWE-0066: Insecure Intents? |
|  |  | Insecure Implementation of SetResult in exported Activity: The insecure implementation used in ResultActivity can be used to access arbitrary content providers. | MASWE-0066: Insecure Intents |
|  |  | Insecure Content Provider: The content provider can be accessed by any third-party app to steal user credentials. | MASWE-0064: Insecure Content Providers |
|  |  | Insecure Webview Properties Enabled: Insecure Webview properties are enabled that can allow third-party apps to exfiltrate local data to remote domain. | MASWE-0069: WebViews Allows Access to Local Resources |
|  | Code |  |  |
|  |  | - | - |
|  | Resilience |  |  |
|  |  | Using Components with Known Vulnerabilities: Identify the vulnerable components or libraries used in the app that can allow you to exfiltrate local files to remote domain. | MASWE-0104: App Integrity Not Verified |
|  | Privacy |  |  |
|  |  | - | - |
| Finstergram |  |  |  |
|  | Storage |  |  |
|  |  | - | - |
|  | Crypto |  |  |
|  |  | - | - |
|  | Auth |  |  |
|  |  | - | - |
|  | Network |  |  |
|  |  | - | - |
|  | Platform |  |  |
|  |  | Exported ImageListActivity | MASWE-0066: Insecure Intents |
|  |  | Exported BroadcastReceiver, sendBroadcast with implicit Intent | MASWE-0063: Insecure Broadcast Receivers |
|  |  | Intent injection in SharedImageActivity | MASWE-0066: Insecure Intents |
|  | Code |  |  |
|  |  | SQL Injection in DatabaseHelper | MASWE-0086: SQL Injection |
|  |  | Deserialization vulnerability in SharedImageActivity | MASWE-0088: Insecure Object Deserialization |
|  | Resilience |  |  |
|  |  | - | - |
|  | Privacy |  |  |
|  |  | - | - |
| [BugBazaar](https://github.com/payatu/BugBazaar?tab=readme-ov-file) |  |  |  |
|  | Storage |  |  |
|  |  | Insecure Logging (logging user creds) | MASWE-0001: Insertion of Sensitive Data into Logs |
|  |  | Unencrypted database | MASWE-0006: Sensitive Data Stored Unencrypted in Private Storage Locations |
|  |  | Man in the Disk Attack | ?MASWE-0007: Sensitive Data Stored Unencrypted in Shared Storage Requiring No User Interaction? |
|  |  | Storing sensitive info in SharedPref | MASWE-0002: Sensitive Data Stored With Insufficient Access Restrictions in Internal Locations + MASWE-0006: Sensitive Data Stored Unencrypted in Private Storage Locations |
|  |  | Hardcoded secrets | MASWE-0006: Sensitive Data Stored Unencrypted in Private Storage Locations |
|  |  | Backup enabled | MASWE-0003: Backup Unencrypted + MASWE-0004: Sensitive Data Not Excluded From Backup |
|  |  | Improper cache handling | MASVSCounterpart |
|  | Crypto |  |  |
|  |  | - | - |
|  | Auth |  |  |
|  |  | Misconfigured firebase's firestore | MASWE-0033: Authentication or Authorization Protocol Security Best Practices Not Followed |
|  | Network |  |  |
|  |  | - | - |
|  | Platform |  |  |
|  |  | Opening arbitrary URLs in the webview | MASWE-0071: WebViews Loading Content from Untrusted Sources |
|  |  | XSS | MASWE-0072: Universal XSS |
|  |  | OPEN REDIRECTION | MASWE-0066: Insecure Intents |
|  |  | Account Takeover via Stealing Session ID (Host validation bypass) | MASWE-0070: JavaScript Loaded from Untrusted Sources |
|  |  | Stealing User token Via JavaScriptInterface class | MASWE-0068: JavaScript Bridges in WebViews |
|  |  | Access of Arbitrary files via insecure Flags Note: Only exploitable until API level 28 | MASWE-0069: WebViews Allows Access to Local Resources |
|  |  | Stealing of Arbitrary files via Insecure WebResourceResponse | MASWE-0073: Insecure WebResourceResponse Implementations |
|  |  | Intent interception | MASWE-0066: Insecure Intents |
|  |  | Account takeover via intent Spoofing | MASWE-0066: Insecure Intents |
|  |  | Steal User's Contact via Insecure Pending Intent | MASWE-0066: Insecure Intents |
|  |  | CSRF to add the product to cart | MASWE-0058: Insecure Deep Links |
|  |  | Deep link hijacking to load URLs in webview | MASWE-0058: Insecure Deep Links + MASWE-0071: WebViews Loading Content from Untrusted Sources |
|  |  | Content Spoofing on Offers activity | MASWE-0058: Insecure Deep Links |
|  |  | Exported Components | MASWE-0066: Insecure Intents |
|  |  | Steal User's Contact via typo permission in Content Provider | MASWE-0064: Insecure Content Providers |
|  |  | Insecure broadcast receiver | MASWE-0063: Insecure Broadcast Receivers |
|  |  | Access to Protected Components via broadcast Receiver | MASWE-0063: Insecure Broadcast Receivers + MASWE-0066: Insecure Intents |
|  |  | Insecure services | MASWE-0062: Insecure Services |
|  |  | Fragment injection in Refer-Us | MASWE-0060: Insecure Use of UIActivity |
|  |  | Copy/Paste buffer Caching | MASWE-0053: Sensitive Data Leaked via the User Interface |
|  |  | Application backgrounding | MASWE-0053: Sensitive Data Leaked via the User Interface + MASWE-0055: Sensitive Data Leaked via Screenshots |
|  |  | Tapjacking | MASWE-0056: Tapjacking Attacks |
|  |  | Task Hijacking | MASWE-0057: StrandHogg Attack / Task Affinity Vulnerability |
|  | Code |  |  |
|  |  | RCE through insecure Dynamic Code Loading | MASWE-0085: Unsafe Dynamic Code Loading |
|  |  | SQL Injection via user input in My order | MASWE-0086: SQL Injection |
|  |  | Content Provider SQL Injection in Address | MASWE-0086: SQL Injection + MASWE-0064: Insecure Content Providers |
|  |  | Data insertion via insecure Content Provider in Address | MASWE-0064: Insecure Content Providers |
|  |  | Improper Input Validation | MASWE-0081: Unsafe Handling Of Data From External Interfaces + MASWE-0083: Unsafe Handling of Data From The User Interface |
|  |  | Unrestricted file upload | MASWE-0081: Unsafe Handling Of Data From External Interfaces |
|  |  | Improper exception Handling | ?MASWE-0081: Unsafe Handling Of Data From External Interfaces? |
|  |  | Improper cache handling | MASWE-0082: Unsafe Handling of Data From Local Storage |
|  |  | Runtime code modification | MASWE-0085: Unsafe Dynamic Code Loading + MASWE-0107: Runtime Code Integrity Not Verified |
|  |  | Improper cache handling | MASWE-0082 (Unsafe Handling of Data from Local Storage |
|  | Resilience |  |  |
|  |  | Passcode Bypass | MASWE-0008: Missing Device Secure Lock Verification Implementation |
|  |  | Debuggable application | MASWE-0067: Debuggable Flag Not Disabled + MASWE-0101: Debugger Detection Not Implemented |
|  |  | Login pin bypass via Frida/Objection | ???MASWE-0097: Root/Jailbreak Detection Not Implemented??? |
|  | Privacy |  |  |
|  |  | - | - |